"""Give default uuid to ids

Revision ID: a499fe2a7454
Revises: 7bda235d65a1
Create Date: 2025-01-02 23:44:44.451314

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a499fe2a7454'
down_revision: Union[str, None] = '7bda235d65a1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # id in sudoku, users, sudoku_registry table should uuid.uuid4 as default
    op.execute('CREATE EXTENSION IF NOT EXISTS "uuid-ossp";')
    op.alter_column(
        'sudoku',
        'id',
        existing_type=sa.UUID(as_uuid=True),
        server_default=sa.text("uuid_generate_v4()"),
        existing_nullable=False,
    )
    op.alter_column(
        'users',
        'id',
        existing_type=sa.UUID(as_uuid=True),
        server_default=sa.text("uuid_generate_v4()"),
        existing_nullable=False,
    )
    op.alter_column(
        'sudoku_registry',
        'id',
        existing_type=sa.UUID(as_uuid=True),
        server_default=sa.text("uuid_generate_v4()"),
        existing_nullable=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        'sudoku_registry',
        'id',
        existing_type=sa.UUID(as_uuid=True),
        server_default=None,
        existing_nullable=False,
    )
    op.alter_column(
        'users',
        'id',
        existing_type=sa.UUID(as_uuid=True),
        server_default=None,
        existing_nullable=False,
    )
    op.alter_column(
        'sudoku',
        'id',
        existing_type=sa.UUID(as_uuid=True),
        server_default=None,
        existing_nullable=False,
    )

    # ### end Alembic commands ###
